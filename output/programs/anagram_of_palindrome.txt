
public class Main {
    public static void main(String[] args) {
        System.out.println(isAnagramOfPalindrome("a")); // true
        System.out.println(isAnagramOfPalindrome("ab")); // false
        System.out.println(isAnagramOfPalindrome("aab")); // true
        System.out.println(isAnagramOfPalindrome("arceace")); // true
        System.out.println(isAnagramOfPalindrome("arceaceb")); // false
    }

    // Function to check if a word is an anagram of a palindrome
    public static boolean isAnagramOfPalindrome(String word) {
        // Runtime: O(n)

        // Create a HashMap to store the frequency of each character
        HashMap<Character, Integer> wordDict = new HashMap<>();

        // Iterate over the word and update the frequency of each character
        for (char l : word.toCharArray()) {
            wordDict.put(l, wordDict.getOrDefault(l, 0) + 1);
        }

        // Check if the word can be a palindrome
        // If the length of the word is even, all characters should have even frequency
        // If the length of the word is odd, all but one character should have even frequency
        int oddCount = 0;
        for (int freq : wordDict.values()) {
            if (freq % 2 != 0) {
                oddCount++;
            }
            if (oddCount > 1) {
                return false;
            }
        }
        return true;
    }