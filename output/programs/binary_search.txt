import java.util.stream.IntStream;

public class Main {
    public static void main(String[] args) {
        // Test the binarySearch function
        System.out.println(binarySearch(50)); // Should print 1
        System.out.println(binarySearch(25)); // Should print 2
        System.out.println(binarySearch(75)); // Should print 2
        System.out.println(binarySearch(31) <= 7); // Should print true

        // Test the maximum number of guesses for all numbers between 1 and 100
        int maxGuesses = IntStream.rangeClosed(1, 100).map(Main::binarySearch).max().getAsInt();
        System.out.println(maxGuesses); // Should print 7
    }

    // Function to perform binary search in the range 1-100
    public static int binarySearch(int val) {
        // Check if the value is in the range 1-100
        if (val < 1 || val > 100) {
            throw new IllegalArgumentException("Val must be between 1-100");
        }

        int numGuesses = 0; // Initialize the number of guesses
        double guess = -1; // Initialize the guess
        double low = 0; // Initialize the lower bound
        double high = 101; // Initialize the upper bound

        // Perform binary search
        while (guess != val) {
            numGuesses++; // Increment the number of guesses
            guess = (high - low) / 2 + low; // Make a guess

            // Update the bounds based on the guess
            if (guess > val) {
                high = guess;
            } else if (guess < val) {
                low = guess;
            }
        }

        return numGuesses; // Return the number of guesses
    }