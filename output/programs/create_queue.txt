import java.util.NoSuchElementException;

public class Queue {
    // LinkedList is used to implement a queue
    private LinkedList<String> items;

    // constructor to create a new queue
    public Queue() {
        items = new LinkedList<String>();
    }

    // method to add an item to the queue
    public void enqueue(String item) {
        items.add(item);
    }

    // method to remove an item from the front of the queue
    public String dequeue() {
        if (!items.isEmpty()) {
            return items.removeFirst();
        } else {
            throw new NoSuchElementException("Queue is empty.");
        }
    }

    // method to check the size of the queue
    public int length() {
        return items.size();
    }

    // method to check if the queue is empty
    public boolean isEmpty() {
        return items.isEmpty();
    }

    // method to get the first item in the queue without removing it
    public String peek() {
        if (!items.isEmpty()) {
            return items.getFirst();
        } else {
            throw new NoSuchElementException("Queue is empty.");
        }
    }

    // method to represent the queue as a string
    @Override
    public String toString() {
        if (items.isEmpty()) {
            return "<Queue (empty)>";
        } else {
            return "<Queue " + items.toString() + ">";
        }
    }

    // main method for testing
    public static void main(String[] args) {
        Queue q = new Queue();
        q.enqueue("buy flight");
        q.enqueue("pack");
        q.enqueue("enjoy vacation");

        System.out.println(q); // should print: <Queue [buy flight, pack, enjoy vacation]>
        System.out.println(q.length()); // should print: 3
        System.out.println(q.peek()); // should print: buy flight
    }