
// Create a hash map
public class HashMap {

    // In a 64-bit system, creates 64 lists in a list
    private ArrayList<ArrayList<String[]>> hash;

    public HashMap() {
        // Creates hash list of lists
        hash = new ArrayList<>(64);
        for (int i = 0; i < 64; i++) {
            hash.add(new ArrayList<>());
        }
    }

    // Hashes a key and returns the hashed index
    private int hashing(String key) {
        int value = 0;

        // Gets the total ASCII value of the key
        for (char c : key.toCharArray()) {
            value += (int) c;
        }

        // Returns index of range(0, 64) for each of the 64 slots
        return value % 64;
    }

    // Finds the key and returns the value in hashmap, if none throws exception
    public String findVal(String key) throws Exception {
        int index = hashing(key);
        ArrayList<String[]> position = hash.get(index);

        if (!position.isEmpty()) {
            // Loops through items at hashed index to return tuple value
            for (String[] item : position) {
                if (item[0].equals(key)) {
                    return item[1];
                }
            }
        }
        throw new Exception("Key does not exist.");
    }

    // Updates or adds a new key value pair
    public void updateOrAdd(String key, String val) {
        int index = hashing(key);
        ArrayList<String[]> position = hash.get(index);

        // Loops through items at hashed index
        // If the position is not empty
        if (!position.isEmpty()) {
            // Update the value if the key exists
            for (String[] item : position) {
                if (item[0].equals(key)) {
                    item[1] = val;
                    return;
                }
            }
        }
        // If no key exists or list is empty, add new key-value pair
        position.add(new String[]{key, val});
    }

    // Takes a key and deletes the key and value from the hashmap
    public void delete(String key) throws Exception {
        int index = hashing(key);
        ArrayList<String[]> position = hash.get(index);

        if (!position.isEmpty()) {
            for (int i = 0; i < position.size(); i++) {
                if (position.get(i)[0].equals(key)) {
                    position.remove(i);
                    return;
                }
            }
        }
        throw new Exception("Key does not exist.");
    }